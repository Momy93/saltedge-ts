{
  "compilerOptions": {
    "target": "ES2022",                        /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', or 'ESNEXT'. */
    "module": "commonjs",                      /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */
    "declaration": true,                       /* Generates corresponding '.d.ts' file. */
    "sourceMap": true,                         /* Generates corresponding '.map' file. */
    "outDir": "./lib",                         /* Redirect output structure to the directory. */
    "strictNullChecks": true,                  /* Enable strict null checks. */
    "strictFunctionTypes": true,               /* Enable strict checking of function types. */
    "strictBindCallApply": true,               /* Enable strict 'bind', 'call', and 'apply' methods on functions. */
    "noImplicitThis": true,                    /* Raise error on 'this' expressions with an implied 'any' type. */
    "noUnusedLocals": true,                    /* Report errors on unused locals. */
    "noUnusedParameters": true,                /* Report errors on unused parameters. */
    "noImplicitReturns": true,                 /* Report error when not all code paths in function return a value. */
    "noFallthroughCasesInSwitch": true,        /* Report errors for fallthrough cases in switch statement. */
    "allowSyntheticDefaultImports": true,      /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
    "esModuleInterop": true,                   /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
    "forceConsistentCasingInFileNames": true,  /* Disallow inconsistently-cased references to the same file. */
    "skipLibCheck": true,
    "moduleResolution": "node"
  },
  "include": ["src"],
  "exclude": ["node_modules", "lib"]
}

